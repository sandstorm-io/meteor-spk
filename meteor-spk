#! /bin/bash

# Copyright (c) 2014 Sandstorm Development Group, Inc. and contributors
# Licensed under the MIT License:
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# This script wrap's Sandstorm's `spk` tool and adds convenience functionality
# specific to Meteor apps. See the readme for more info.

set -euo pipefail

DEPS_DIR=$(readlink -f "${BASH_SOURCE[0]}").deps
METEOR_WAREHOUSE_DIR="${METEOR_WAREHOUSE_DIR:-$HOME/.meteor}"

if [ ! -e "$DEPS_DIR" ]; then
  echo "Couldn't find $0's dependencies; expected in: $DEPS_DIR" >&2
  exit 1
fi

if [ ! -x "$METEOR_WAREHOUSE_DIR/meteor" ]; then
  echo "Couldn't find Meteor installation. Please install Meteor." >&2
  exit 1
fi

METEOR_DEV_BUNDLE=$(dirname $(readlink -f "$METEOR_WAREHOUSE_DIR/meteor"))/dev_bundle
if [ ! -e "$METEOR_DEV_BUNDLE/bin/node" ]; then
  echo "Meteor installation is not laid out like I expected." >&2
  echo "This tool requires Meteor version 0.9.0 or newer." >&2
  exit 1
fi

if [ ! -e .meteor/release ]; then
  echo "This directory does not appear to contain a Meteor application." >&2
  exit 1
fi

if [ $# = 0 ]; then
  echo "Missing command. Try: $0 help" >&2
  exit 1
fi

COMMAND=$1
shift

makedotdir() {
  mkdir -p .meteor-spk
  ln -sfT "$DEPS_DIR" .meteor-spk/deps
}

bundle() {
  makedotdir

  echo "Building Meteor app..."
  meteor npm install
  meteor build --directory .meteor-spk
  (cd .meteor-spk/bundle/programs/server && meteor npm install && cd node_modules/fibers && node build.js)
}

case "$COMMAND" in
  init )
    makedotdir
    spk init -p 4000 -I.meteor-spk/deps -I.meteor-spk/bundle -A "$@" -- node start.js
    if [ -e .git ]; then
      cat >> .gitignore << __EOF__
.meteor-spk
__EOF__
    fi
    ;;
  dev )
    bundle
    spk dev "$@"
    ;;
  pack )
    bundle
    spk pack "$@"
    ;;
  clean )
    rm -rf .meteor-spk/bundle
    ;;
  help )
    cat << __EOF__
$0 is much like Sandstorm's standard 'spk' tool except that it includes some
Meteor-specific shortcuts. In particular:
- You don't need to pass any arguments to 'init'.
- You don't need to worry about setting up a source map to define what is in
  your package. The 'dev' and 'pack' commands will automatically bundle your
  Meteor app together with everything that is needed.
__EOF__
    ;;
  * )
    spk "$COMMAND" "$@"
    ;;
esac

